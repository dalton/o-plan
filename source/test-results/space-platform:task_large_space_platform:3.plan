
;;; Statistics:
(
(:am-cycles . 98)
(:n-alts-chosen . 1)
(:n-alts-remaining . 83)
(:n-poisons . 1)
)

;;; Action levels:
(
(antenna . 3)
(build . 1)
(joint . 4)
(module . 3)
(place_antenna . 2)
(place_joint . 3)
(place_module . 2)
(place_radiator . 2)
(place_solar_panel . 2)
(place_truss . 2)
(place_tube . 2)
(radiator . 3)
(solar_panel . 3)
(task_large_space_platform . 0)
(task_small_space_platform . 0)
(task_space_platform . 0)
(truss . 3)
(tube . 3)
)

;;; Effect levels:
(
(anchored . 2)
(antenna_at . 2)
(joint_at . 3)
(location . 0)
(module_at . 2)
(port_code . 0)
(radiator_at . 2)
(solar_panel_at . 2)
(truss_at . 2)
(tube_at . 2)
)

;;; Nodes:
(
(node-1
   nil
   nil
   nil
   ((node-3 :begin))
   (0 :inf 0 :inf)
   start
   nil
)
(node-2
   ((node-3 :end))
   nil
   nil
   nil
   (0 :inf 0 :inf)
   finish
   nil
)
(node-3
   ((node-1 :end))
   ((node-3-1 :begin))
   ((node-3-23 :end) (node-3-24 :end) (node-3-25 :end) (node-3-26 :end) (node-3-27 :end) (node-3-28 :end) (node-3-29 :end) (node-3-30 :end) (node-3-31 :end) (node-3-32 :end))
   ((node-2 :begin))
   (0 :inf 0 :inf)
   action
   (build large_platform)
)
(node-3-1
   ((node-3 :begin))
   nil
   nil
   ((node-3-21 :begin) (node-3-20 :begin) (node-3-19 :begin) (node-3-18 :begin) (node-3-17 :begin) (node-3-16 :begin) (node-3-15 :begin) (node-3-14 :begin) (node-3-13 :begin) (node-3-12 :begin) (node-3-11 :begin) (node-3-10 :begin) (node-3-9 :begin) (node-3-8 :begin) (node-3-7 :begin) (node-3-6 :begin) (node-3-5 :begin) (node-3-4 :begin) (node-3-3 :begin) (node-3-2 :begin))
   (0 :inf 0 :inf)
   dummy
   nil
)
(node-3-2
   ((node-3-1 :end))
   ((node-3-2-1 :begin))
   ((node-3-2-1 :end))
   ((node-3-13-1 :begin) (node-3-22 :begin))
   (0 :inf 0 :inf)
   action
   (place_joint a)
)
(node-3-2-1
   ((node-3-2 :begin))
   nil
   nil
   ((node-3-2 :end))
   (0 :inf 0 :inf)
   action
   (joint a 100 150 0)
)
(node-3-3
   ((node-3-1 :end))
   ((node-3-3-1 :begin))
   ((node-3-3-1 :end))
   ((node-3-14-1 :begin) (node-3-22 :begin))
   (0 :inf 0 :inf)
   action
   (place_joint b)
)
(node-3-3-1
   ((node-3-13 :end) (node-3-3 :begin))
   nil
   nil
   ((node-3-3 :end))
   (0 :inf 0 :inf)
   action
   (joint b 180 150 0)
)
(node-3-4
   ((node-3-1 :end))
   ((node-3-4-1 :begin))
   ((node-3-4-1 :end))
   ((node-3-20-1 :begin) (node-3-17-1 :begin) (node-3-10-1 :begin) (node-3-22 :begin))
   (0 :inf 0 :inf)
   action
   (place_joint c)
)
(node-3-4-1
   ((node-3-14 :end) (node-3-4 :begin))
   nil
   nil
   ((node-3-4 :end))
   (0 :inf 0 :inf)
   action
   (joint c 300 150 0)
)
(node-3-5
   ((node-3-1 :end))
   ((node-3-5-1 :begin))
   ((node-3-5-1 :end))
   ((node-3-21-1 :begin) (node-3-18-1 :begin) (node-3-15-1 :begin) (node-3-22 :begin))
   (0 :inf 0 :inf)
   action
   (place_joint d)
)
(node-3-5-1
   ((node-3-10 :end) (node-3-5 :begin))
   nil
   nil
   ((node-3-5 :end))
   (0 :inf 0 :inf)
   action
   (joint d 360 150 0)
)
(node-3-6
   ((node-3-1 :end))
   ((node-3-6-1 :begin))
   ((node-3-6-1 :end))
   ((node-3-16-1 :begin) (node-3-22 :begin))
   (0 :inf 0 :inf)
   action
   (place_joint e)
)
(node-3-6-1
   ((node-3-15 :end) (node-3-6 :begin))
   nil
   nil
   ((node-3-6 :end))
   (0 :inf 0 :inf)
   action
   (joint e 440 150 0)
)
(node-3-7
   ((node-3-1 :end))
   ((node-3-7-1 :begin))
   ((node-3-7-1 :end))
   ((node-3-22 :begin))
   (0 :inf 0 :inf)
   action
   (place_joint f)
)
(node-3-7-1
   ((node-3-16 :end) (node-3-7 :begin))
   nil
   nil
   ((node-3-7 :end))
   (0 :inf 0 :inf)
   action
   (joint f 520 150 0)
)
(node-3-8
   ((node-3-1 :end))
   ((node-3-8-1 :begin))
   ((node-3-8-1 :end))
   ((node-3-19-1 :begin) (node-3-11-1 :begin) (node-3-22 :begin))
   (0 :inf 0 :inf)
   action
   (place_joint g)
)
(node-3-8-1
   ((node-3-17 :end) (node-3-8 :begin))
   nil
   nil
   ((node-3-8 :end))
   (0 :inf 0 :inf)
   action
   (joint g 300 30 0)
)
(node-3-9
   ((node-3-1 :end))
   ((node-3-9-1 :begin))
   ((node-3-9-1 :end))
   ((node-3-12-1 :begin) (node-3-22 :begin))
   (0 :inf 0 :inf)
   action
   (place_joint h)
)
(node-3-9-1
   ((node-3-19 :end) (node-3-9 :begin))
   nil
   nil
   ((node-3-9 :end))
   (0 :inf 0 :inf)
   action
   (joint h 360 30 0)
)
(node-3-10
   ((node-3-1 :end))
   ((node-3-10-1 :begin))
   ((node-3-10-1 :end))
   ((node-3-5-1 :begin) (node-3-22 :begin))
   (0 :inf 0 :inf)
   action
   (place_tube 40 c b d d)
)
(node-3-10-1
   ((node-3-4 :end) (node-3-10 :begin))
   nil
   nil
   ((node-3-10 :end))
   (0 :inf 0 :inf)
   action
   (tube 40 300 150 0 0)
)
(node-3-11
   ((node-3-1 :end))
   ((node-3-11-1 :begin))
   ((node-3-11-1 :end))
   ((node-3-22 :begin))
   (0 :inf 0 :inf)
   action
   (place_tube 10 g c none none)
)
(node-3-11-1
   ((node-3-8 :end) (node-3-11 :begin))
   nil
   nil
   ((node-3-11 :end))
   (0 :inf 0 :inf)
   action
   (tube 10 300 30 0 -90)
)
(node-3-12
   ((node-3-1 :end))
   ((node-3-12-1 :begin))
   ((node-3-12-1 :end))
   ((node-3-22 :begin))
   (0 :inf 0 :inf)
   action
   (place_tube 10 h c none none)
)
(node-3-12-1
   ((node-3-9 :end) (node-3-12 :begin))
   nil
   nil
   ((node-3-12 :end))
   (0 :inf 0 :inf)
   action
   (tube 10 360 30 0 -90)
)
(node-3-13
   ((node-3-1 :end))
   ((node-3-13-1 :begin))
   ((node-3-13-1 :end))
   ((node-3-3-1 :begin) (node-3-22 :begin))
   (0 :inf 0 :inf)
   action
   (place_truss 3 a b b d)
)
(node-3-13-1
   ((node-3-2 :end) (node-3-13 :begin))
   nil
   nil
   ((node-3-13 :end))
   (0 :inf 0 :inf)
   action
   (truss 3 100 150 0 0)
)
(node-3-14
   ((node-3-1 :end))
   ((node-3-14-1 :begin))
   ((node-3-14-1 :end))
   ((node-3-4-1 :begin) (node-3-22 :begin))
   (0 :inf 0 :inf)
   action
   (place_truss 5 b b c d)
)
(node-3-14-1
   ((node-3-3 :end) (node-3-14 :begin))
   nil
   nil
   ((node-3-14 :end))
   (0 :inf 0 :inf)
   action
   (truss 5 180 150 0 0)
)
(node-3-15
   ((node-3-1 :end))
   ((node-3-15-1 :begin))
   ((node-3-15-1 :end))
   ((node-3-6-1 :begin) (node-3-22 :begin))
   (0 :inf 0 :inf)
   action
   (place_truss 3 d b e d)
)
(node-3-15-1
   ((node-3-5 :end) (node-3-15 :begin))
   nil
   nil
   ((node-3-15 :end))
   (0 :inf 0 :inf)
   action
   (truss 3 360 150 0 0)
)
(node-3-16
   ((node-3-1 :end))
   ((node-3-16-1 :begin))
   ((node-3-16-1 :end))
   ((node-3-7-1 :begin) (node-3-22 :begin))
   (0 :inf 0 :inf)
   action
   (place_truss 3 e b f d)
)
(node-3-16-1
   ((node-3-6 :end) (node-3-16 :begin))
   nil
   nil
   ((node-3-16 :end))
   (0 :inf 0 :inf)
   action
   (truss 3 440 150 0 0)
)
(node-3-17
   ((node-3-1 :end))
   ((node-3-17-1 :begin))
   ((node-3-17-1 :end))
   ((node-3-8-1 :begin) (node-3-22 :begin))
   (0 :inf 0 :inf)
   action
   (place_module 100 c c g a)
)
(node-3-17-1
   ((node-3-4 :end) (node-3-17 :begin))
   nil
   nil
   ((node-3-17 :end))
   (0 :inf 0 :inf)
   action
   (module 100 300 150 0 -90)
)
(node-3-18
   ((node-3-1 :end))
   ((node-3-18-1 :begin))
   ((node-3-18-1 :end))
   ((node-3-22 :begin))
   (0 :inf 0 :inf)
   action
   (place_module 100 d c h a)
)
(node-3-18-1
   ((node-3-5 :end) (node-3-18 :begin))
   nil
   nil
   ((node-3-18 :end))
   (0 :inf 0 :inf)
   action
   (module 100 360 150 0 -90)
)
(node-3-19
   ((node-3-1 :end))
   ((node-3-19-1 :begin))
   ((node-3-19-1 :end))
   ((node-3-9-1 :begin) (node-3-22 :begin))
   (0 :inf 0 :inf)
   action
   (place_module 40 g b h d)
)
(node-3-19-1
   ((node-3-8 :end) (node-3-19 :begin))
   nil
   nil
   ((node-3-19 :end))
   (0 :inf 0 :inf)
   action
   (module 40 300 30 0 0)
)
(node-3-20
   ((node-3-1 :end))
   ((node-3-20-1 :begin))
   ((node-3-20-1 :end))
   ((node-3-22 :begin))
   (0 :inf 0 :inf)
   action
   (place_module 60 c a none none)
)
(node-3-20-1
   ((node-3-4 :end) (node-3-20 :begin))
   nil
   nil
   ((node-3-20 :end))
   (0 :inf 0 :inf)
   action
   (module 60 300 150 0 90)
)
(node-3-21
   ((node-3-1 :end))
   ((node-3-21-1 :begin))
   ((node-3-21-1 :end))
   ((node-3-22 :begin))
   (0 :inf 0 :inf)
   action
   (place_module 40 d a none none)
)
(node-3-21-1
   ((node-3-5 :end) (node-3-21 :begin))
   nil
   nil
   ((node-3-21 :end))
   (0 :inf 0 :inf)
   action
   (module 40 360 150 0 90)
)
(node-3-22
   ((node-3-21 :end) (node-3-20 :end) (node-3-19 :end) (node-3-18 :end) (node-3-17 :end) (node-3-16 :end) (node-3-15 :end) (node-3-14 :end) (node-3-13 :end) (node-3-12 :end) (node-3-11 :end) (node-3-10 :end) (node-3-9 :end) (node-3-8 :end) (node-3-7 :end) (node-3-6 :end) (node-3-5 :end) (node-3-4 :end) (node-3-3 :end) (node-3-2 :end))
   nil
   nil
   ((node-3-32 :begin) (node-3-31 :begin) (node-3-30 :begin) (node-3-29 :begin) (node-3-28 :begin) (node-3-27 :begin) (node-3-26 :begin) (node-3-25 :begin) (node-3-24 :begin) (node-3-23 :begin))
   (0 :inf 0 :inf)
   dummy
   nil
)
(node-3-23
   ((node-3-22 :end))
   ((node-3-23-1 :begin))
   ((node-3-23-1 :end))
   ((node-3 :end))
   (0 :inf 0 :inf)
   action
   (place_radiator 60 20 a a)
)
(node-3-23-1
   ((node-3-23 :begin))
   nil
   nil
   ((node-3-23 :end))
   (0 :inf 0 :inf)
   action
   (radiator 60 20 100 150 0 90)
)
(node-3-24
   ((node-3-22 :end))
   ((node-3-24-1 :begin))
   ((node-3-24-1 :end))
   ((node-3 :end))
   (0 :inf 0 :inf)
   action
   (place_radiator 60 20 a c)
)
(node-3-24-1
   ((node-3-24 :begin))
   nil
   nil
   ((node-3-24 :end))
   (0 :inf 0 :inf)
   action
   (radiator 60 20 100 150 0 -90)
)
(node-3-25
   ((node-3-22 :end))
   ((node-3-25-1 :begin))
   ((node-3-25-1 :end))
   ((node-3 :end))
   (0 :inf 0 :inf)
   action
   (place_solar_panel 60 40 20 b e)
)
(node-3-25-1
   ((node-3-25 :begin))
   nil
   nil
   ((node-3-25 :end))
   (0 :inf 0 :inf)
   action
   (solar_panel 60 40 20 180 150 0 1)
)
(node-3-26
   ((node-3-22 :end))
   ((node-3-26-1 :begin))
   ((node-3-26-1 :end))
   ((node-3 :end))
   (0 :inf 0 :inf)
   action
   (place_solar_panel 60 40 20 b f)
)
(node-3-26-1
   ((node-3-26 :begin))
   nil
   nil
   ((node-3-26 :end))
   (0 :inf 0 :inf)
   action
   (solar_panel 60 40 20 180 150 0 -1)
)
(node-3-27
   ((node-3-22 :end))
   ((node-3-27-1 :begin))
   ((node-3-27-1 :end))
   ((node-3 :end))
   (0 :inf 0 :inf)
   action
   (place_solar_panel 60 40 20 e e)
)
(node-3-27-1
   ((node-3-27 :begin))
   nil
   nil
   ((node-3-27 :end))
   (0 :inf 0 :inf)
   action
   (solar_panel 60 40 20 440 150 0 1)
)
(node-3-28
   ((node-3-22 :end))
   ((node-3-28-1 :begin))
   ((node-3-28-1 :end))
   ((node-3 :end))
   (0 :inf 0 :inf)
   action
   (place_solar_panel 60 40 20 e f)
)
(node-3-28-1
   ((node-3-28 :begin))
   nil
   nil
   ((node-3-28 :end))
   (0 :inf 0 :inf)
   action
   (solar_panel 60 40 20 440 150 0 -1)
)
(node-3-29
   ((node-3-22 :end))
   ((node-3-29-1 :begin))
   ((node-3-29-1 :end))
   ((node-3 :end))
   (0 :inf 0 :inf)
   action
   (place_solar_panel 60 40 20 f e)
)
(node-3-29-1
   ((node-3-29 :begin))
   nil
   nil
   ((node-3-29 :end))
   (0 :inf 0 :inf)
   action
   (solar_panel 60 40 20 520 150 0 1)
)
(node-3-30
   ((node-3-22 :end))
   ((node-3-30-1 :begin))
   ((node-3-30-1 :end))
   ((node-3 :end))
   (0 :inf 0 :inf)
   action
   (place_solar_panel 60 40 20 f f)
)
(node-3-30-1
   ((node-3-30 :begin))
   nil
   nil
   ((node-3-30 :end))
   (0 :inf 0 :inf)
   action
   (solar_panel 60 40 20 520 150 0 -1)
)
(node-3-31
   ((node-3-22 :end))
   ((node-3-31-1 :begin))
   ((node-3-31-1 :end))
   ((node-3 :end))
   (0 :inf 0 :inf)
   action
   (place_antenna 20 20 b c)
)
(node-3-31-1
   ((node-3-31 :begin))
   nil
   nil
   ((node-3-31 :end))
   (0 :inf 0 :inf)
   action
   (antenna 20 20 180 150 0 -90)
)
(node-3-32
   ((node-3-22 :end))
   ((node-3-32-1 :begin))
   ((node-3-32-1 :end))
   ((node-3 :end))
   (0 :inf 0 :inf)
   action
   (place_antenna 80 20 f c)
)
(node-3-32-1
   ((node-3-32 :begin))
   nil
   nil
   ((node-3-32 :end))
   (0 :inf 0 :inf)
   action
   (antenna 80 20 520 150 0 -90)
)
)

;;; TOME:
(
((tome (anchored a) (node-1 :end)) true)
((tome (anchored b) (node-3-13 :end)) true)
((tome (anchored c) (node-3-14 :end)) true)
((tome (anchored d) (node-3-10 :end)) true)
((tome (anchored e) (node-3-15 :end)) true)
((tome (anchored f) (node-3-16 :end)) true)
((tome (anchored g) (node-3-17 :end)) true)
((tome (anchored h) (node-3-18 :end)) true)
((tome (anchored h) (node-3-19 :end)) true)
((tome (anchored none) (node-3-11 :end)) true)
((tome (anchored none) (node-3-12 :end)) true)
((tome (anchored none) (node-3-20 :end)) true)
((tome (anchored none) (node-3-21 :end)) true)
((tome (antenna_at 20 20 180 150 0 -90) (node-3-31-1 :end)) true)
((tome (antenna_at 80 20 520 150 0 -90) (node-3-32-1 :end)) true)
((tome (joint_at a 100 150 0) (node-3-2 :end)) true)
((tome (joint_at b 180 150 0) (node-3-3 :end)) true)
((tome (joint_at c 300 150 0) (node-3-4 :end)) true)
((tome (joint_at d 360 150 0) (node-3-5 :end)) true)
((tome (joint_at e 440 150 0) (node-3-6 :end)) true)
((tome (joint_at f 520 150 0) (node-3-7 :end)) true)
((tome (joint_at g 300 30 0) (node-3-8 :end)) true)
((tome (joint_at h 360 30 0) (node-3-9 :end)) true)
((tome (location a) (node-1 :end)) (100 150 0))
((tome (location b) (node-1 :end)) (180 150 0))
((tome (location c) (node-1 :end)) (300 150 0))
((tome (location d) (node-1 :end)) (360 150 0))
((tome (location e) (node-1 :end)) (440 150 0))
((tome (location f) (node-1 :end)) (520 150 0))
((tome (location g) (node-1 :end)) (300 30 0))
((tome (location h) (node-1 :end)) (360 30 0))
((tome (module_at 40 300 30 0 0) (node-3-19 :end)) true)
((tome (module_at 40 360 150 0 90) (node-3-21 :end)) true)
((tome (module_at 60 300 150 0 90) (node-3-20 :end)) true)
((tome (module_at 100 300 150 0 -90) (node-3-17 :end)) true)
((tome (module_at 100 360 150 0 -90) (node-3-18 :end)) true)
((tome (port_code a) :always) 90)
((tome (port_code b) :always) 0)
((tome (port_code c) :always) -90)
((tome (port_code d) :always) 180)
((tome (port_code e) :always) 1)
((tome (port_code f) :always) -1)
((tome (radiator_at 60 20 100 150 0 -90) (node-3-24 :end)) true)
((tome (radiator_at 60 20 100 150 0 90) (node-3-23 :end)) true)
((tome (solar_panel_at 60 40 20 180 150 0 -1) (node-3-26 :end)) true)
((tome (solar_panel_at 60 40 20 180 150 0 1) (node-3-25 :end)) true)
((tome (solar_panel_at 60 40 20 440 150 0 -1) (node-3-28 :end)) true)
((tome (solar_panel_at 60 40 20 440 150 0 1) (node-3-27 :end)) true)
((tome (solar_panel_at 60 40 20 520 150 0 -1) (node-3-30 :end)) true)
((tome (solar_panel_at 60 40 20 520 150 0 1) (node-3-29 :end)) true)
((tome (truss_at 3 100 150 0 0) (node-3-13 :end)) true)
((tome (truss_at 3 360 150 0 0) (node-3-15 :end)) true)
((tome (truss_at 3 440 150 0 0) (node-3-16 :end)) true)
((tome (truss_at 5 180 150 0 0) (node-3-14 :end)) true)
((tome (tube_at 10 300 30 0 -90) (node-3-11 :end)) true)
((tome (tube_at 10 360 30 0 -90) (node-3-12 :end)) true)
((tome (tube_at 40 300 150 0 0) (node-3-10 :end)) true)
)

;;; GOST:
(
((gost achievable (joint_at a 100 150 0) true (node-3-13-1 :begin))
   (((node-3-2 :end) . :link-no-bindings))
)
((gost achievable (joint_at b 180 150 0) true (node-3-14-1 :begin))
   (((node-3-3 :end) . :link-no-bindings))
)
((gost achievable (joint_at c 300 150 0) true (node-3-10-1 :begin))
   (((node-3-4 :end) . :link-no-bindings))
)
((gost achievable (joint_at c 300 150 0) true (node-3-17-1 :begin))
   (((node-3-4 :end) . :link-no-bindings))
)
((gost achievable (joint_at c 300 150 0) true (node-3-20-1 :begin))
   (((node-3-4 :end) . :link-no-bindings))
)
((gost achievable (joint_at d 360 150 0) true (node-3-15-1 :begin))
   (((node-3-5 :end) . :link-no-bindings))
)
((gost achievable (joint_at d 360 150 0) true (node-3-18-1 :begin))
   (((node-3-5 :end) . :link-no-bindings))
)
((gost achievable (joint_at d 360 150 0) true (node-3-21-1 :begin))
   (((node-3-5 :end) . :link-no-bindings))
)
((gost achievable (joint_at e 440 150 0) true (node-3-16-1 :begin))
   (((node-3-6 :end) . :link-no-bindings))
)
((gost achievable (joint_at g 300 30 0) true (node-3-11-1 :begin))
   (((node-3-8 :end) . :link-no-bindings))
)
((gost achievable (joint_at g 300 30 0) true (node-3-19-1 :begin))
   (((node-3-8 :end) . :link-no-bindings))
)
((gost achievable (joint_at h 360 30 0) true (node-3-12-1 :begin))
   (((node-3-9 :end) . :link-no-bindings))
)
((gost only_use_if (anchored a) true (node-3-2-1 :begin))
   (((node-1 :end) . :already-satisfied))
)
((gost only_use_if (anchored b) true (node-3-3-1 :begin))
   (((node-3-13 :end) . :link-no-bindings))
)
((gost only_use_if (joint_at a 100 150 0) true (node-3-23-1 :begin))
   (((node-3-2 :end) . :already-satisfied))
)
((gost only_use_if (joint_at a 100 150 0) true (node-3-24-1 :begin))
   (((node-3-2 :end) . :already-satisfied))
)
((gost only_use_if (joint_at b 180 150 0) true (node-3-25-1 :begin))
   (((node-3-3 :end) . :already-satisfied))
)
((gost only_use_if (joint_at b 180 150 0) true (node-3-26-1 :begin))
   (((node-3-3 :end) . :already-satisfied))
)
((gost only_use_if (joint_at b 180 150 0) true (node-3-31-1 :begin))
   (((node-3-3 :end) . :already-satisfied))
)
((gost only_use_if (joint_at e 440 150 0) true (node-3-27-1 :begin))
   (((node-3-6 :end) . :already-satisfied))
)
((gost only_use_if (joint_at e 440 150 0) true (node-3-28-1 :begin))
   (((node-3-6 :end) . :already-satisfied))
)
((gost only_use_if (joint_at f 520 150 0) true (node-3-29-1 :begin))
   (((node-3-7 :end) . :already-satisfied))
)
((gost only_use_if (joint_at f 520 150 0) true (node-3-30-1 :begin))
   (((node-3-7 :end) . :already-satisfied))
)
((gost only_use_if (joint_at f 520 150 0) true (node-3-32-1 :begin))
   (((node-3-7 :end) . :already-satisfied))
)
((gost only_use_if (location a) (100 150 0) (node-3-13-1 :begin))
   (((node-1 :end) . :already-satisfied))
)
((gost only_use_if (location a) (100 150 0) (node-3-2-1 :begin))
   (((node-1 :end) . :already-satisfied))
)
((gost only_use_if (location b) (180 150 0) (node-3-14-1 :begin))
   (((node-1 :end) . :already-satisfied))
)
((gost only_use_if (location b) (180 150 0) (node-3-3-1 :begin))
   (((node-1 :end) . :already-satisfied))
)
((gost only_use_if (location c) (300 150 0) (node-3-10-1 :begin))
   (((node-1 :end) . :already-satisfied))
)
((gost only_use_if (location c) (300 150 0) (node-3-17-1 :begin))
   (((node-1 :end) . :already-satisfied))
)
((gost only_use_if (location c) (300 150 0) (node-3-20-1 :begin))
   (((node-1 :end) . :already-satisfied))
)
((gost only_use_if (location c) (300 150 0) (node-3-4-1 :begin))
   (((node-1 :end) . :already-satisfied))
)
((gost only_use_if (location d) (360 150 0) (node-3-15-1 :begin))
   (((node-1 :end) . :already-satisfied))
)
((gost only_use_if (location d) (360 150 0) (node-3-18-1 :begin))
   (((node-1 :end) . :already-satisfied))
)
((gost only_use_if (location d) (360 150 0) (node-3-21-1 :begin))
   (((node-1 :end) . :already-satisfied))
)
((gost only_use_if (location d) (360 150 0) (node-3-5-1 :begin))
   (((node-1 :end) . :already-satisfied))
)
((gost only_use_if (location e) (440 150 0) (node-3-16-1 :begin))
   (((node-1 :end) . :already-satisfied))
)
((gost only_use_if (location e) (440 150 0) (node-3-6-1 :begin))
   (((node-1 :end) . :already-satisfied))
)
((gost only_use_if (location f) (520 150 0) (node-3-7-1 :begin))
   (((node-1 :end) . :already-satisfied))
)
((gost only_use_if (location g) (300 30 0) (node-3-11-1 :begin))
   (((node-1 :end) . :already-satisfied))
)
((gost only_use_if (location g) (300 30 0) (node-3-19-1 :begin))
   (((node-1 :end) . :already-satisfied))
)
((gost only_use_if (location g) (300 30 0) (node-3-8-1 :begin))
   (((node-1 :end) . :already-satisfied))
)
((gost only_use_if (location h) (360 30 0) (node-3-12-1 :begin))
   (((node-1 :end) . :already-satisfied))
)
((gost only_use_if (location h) (360 30 0) (node-3-9-1 :begin))
   (((node-1 :end) . :already-satisfied))
)
((gost only_use_if (port_code a) 90 (node-3-20-1 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_if (port_code a) 90 (node-3-21-1 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_if (port_code a) 90 (node-3-23-1 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_if (port_code b) 0 (node-3-10-1 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_if (port_code b) 0 (node-3-13-1 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_if (port_code b) 0 (node-3-14-1 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_if (port_code b) 0 (node-3-15-1 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_if (port_code b) 0 (node-3-16-1 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_if (port_code b) 0 (node-3-19-1 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_if (port_code c) -90 (node-3-11-1 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_if (port_code c) -90 (node-3-12-1 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_if (port_code c) -90 (node-3-17-1 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_if (port_code c) -90 (node-3-18-1 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_if (port_code c) -90 (node-3-24-1 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_if (port_code c) -90 (node-3-31-1 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_if (port_code c) -90 (node-3-32-1 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_if (port_code e) 1 (node-3-25-1 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_if (port_code e) 1 (node-3-27-1 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_if (port_code e) 1 (node-3-29-1 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_if (port_code f) -1 (node-3-26-1 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_if (port_code f) -1 (node-3-28-1 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_if (port_code f) -1 (node-3-30-1 :begin))
   ((:always . :already-satisfied))
)
((gost unsupervised (anchored c) true (node-3-4-1 :begin))
   (((node-3-14 :end) . :link-no-bindings))
)
((gost unsupervised (anchored d) true (node-3-5-1 :begin))
   (((node-3-10 :end) . :link-no-bindings))
)
((gost unsupervised (anchored e) true (node-3-6-1 :begin))
   (((node-3-15 :end) . :link-no-bindings))
)
((gost unsupervised (anchored f) true (node-3-7-1 :begin))
   (((node-3-16 :end) . :link-no-bindings))
)
((gost unsupervised (anchored g) true (node-3-8-1 :begin))
   (((node-3-17 :end) . :link-no-bindings))
)
((gost unsupervised (anchored h) true (node-3-9-1 :begin))
   (((node-3-19 :end) . :link-no-bindings))
)
)

;;; PSV descriptions:
(
)

;;; PSV equivalence classes:
(
)

;;; Resource usage table:
(
)

;;; World at end of node-1:
(
((port_code a) 90)
((port_code b) 0)
((port_code c) -90)
((port_code d) 180)
((port_code e) 1)
((port_code f) -1)
)

;;; World at end of node-2:
(
((anchored a) true)
((anchored b) true)
((anchored c) true)
((anchored d) true)
((anchored e) true)
((anchored f) true)
((anchored g) true)
((anchored h) true)
((anchored none) true)
((antenna_at 20 20 180 150 0 -90) true)
((antenna_at 80 20 520 150 0 -90) true)
((joint_at a 100 150 0) true)
((joint_at b 180 150 0) true)
((joint_at c 300 150 0) true)
((joint_at d 360 150 0) true)
((joint_at e 440 150 0) true)
((joint_at f 520 150 0) true)
((joint_at g 300 30 0) true)
((joint_at h 360 30 0) true)
((location a) (100 150 0))
((location b) (180 150 0))
((location c) (300 150 0))
((location d) (360 150 0))
((location e) (440 150 0))
((location f) (520 150 0))
((location g) (300 30 0))
((location h) (360 30 0))
((module_at 40 300 30 0 0) true)
((module_at 40 360 150 0 90) true)
((module_at 60 300 150 0 90) true)
((module_at 100 300 150 0 -90) true)
((module_at 100 360 150 0 -90) true)
((port_code a) 90)
((port_code b) 0)
((port_code c) -90)
((port_code d) 180)
((port_code e) 1)
((port_code f) -1)
((radiator_at 60 20 100 150 0 -90) true)
((radiator_at 60 20 100 150 0 90) true)
((solar_panel_at 60 40 20 180 150 0 -1) true)
((solar_panel_at 60 40 20 180 150 0 1) true)
((solar_panel_at 60 40 20 440 150 0 -1) true)
((solar_panel_at 60 40 20 440 150 0 1) true)
((solar_panel_at 60 40 20 520 150 0 -1) true)
((solar_panel_at 60 40 20 520 150 0 1) true)
((truss_at 3 100 150 0 0) true)
((truss_at 3 360 150 0 0) true)
((truss_at 3 440 150 0 0) true)
((truss_at 5 180 150 0 0) true)
((tube_at 10 300 30 0 -90) true)
((tube_at 10 360 30 0 -90) true)
((tube_at 40 300 150 0 0) true)
)

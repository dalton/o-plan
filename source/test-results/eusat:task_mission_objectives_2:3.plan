
;;; Statistics:
(
(:am-cycles . 239)
(:n-alts-chosen . 3)
(:n-alts-remaining . 115)
(:n-poisons . 3)
)

;;; Action levels:
(
(capture . 1)
(connect . 4)
(data_dump . 2)
(dce_communicate . 1)
(dump_dsr . 2)
(fill_up . 3)
(load_dsr . 2)
(monitor_spacecraft_health . 1)
(package_down . 3)
(read_from . 3)
(receive_message . 2)
(set_to . 4)
(task_mission_objectives_1 . 0)
(task_mission_objectives_2 . 0)
(transmit_message . 2)
(turn_off . 3)
(turn_on . 3)
)

;;; Effect levels:
(
(contents . 3)
(input . 4)
(mode . 4)
(output . 4)
(status . 3)
(switch_input_can_be . 0)
(switch_output_can_be . 0)
)

;;; Nodes:
(
(node-1
   nil
   nil
   nil
   ((node-7 :begin) (node-6 :begin) (node-5 :begin) (node-4 :begin) (node-3 :begin))
   (0 :inf 0 :inf)
   start
   nil
)
(node-2
   ((node-7 :end) (node-6 :end) (node-5 :end) (node-4 :end) (node-3 :end))
   nil
   nil
   nil
   (0 :inf 0 :inf)
   finish
   nil
)
(node-3
   ((node-1 :end))
   ((node-3-1 :begin))
   ((node-3-4 :end))
   ((node-2 :begin))
   (0 :inf 0 :inf)
   action
   (monitor_spacecraft_health)
)
(node-3-1
   ((node-3 :begin))
   ((node-3-1-1 :begin) (node-3-1-2 :begin) (node-3-1-3 :begin) (node-3-1-4 :begin))
   ((node-7-2-1-1 :end) (node-6-3-1-1 :end) (node-4-2-1-1 :end) (node-7-1-2 :end) (node-3-1-1 :end) (node-3-1-2 :end) (node-3-1-3 :end) (node-3-1-4 :end))
   ((node-3-2 :begin))
   (0 :inf 0 :inf)
   action
   (package_down antenna_70cm line13)
)
(node-3-1-1
   ((node-3-1 :begin))
   nil
   nil
   ((node-4-2-1 :end) (node-5-2-1 :end) (node-7-2-1 :end) (node-6-3-1 :end) (node-3-1 :end))
   (0 :inf 0 :inf)
   action
   (connect switch4 line13 line16)
)
(node-3-1-2
   ((node-3-1 :begin))
   nil
   nil
   ((node-3-1 :end))
   (0 :inf 0 :inf)
   action
   (connect switch5 line16 antenna_70cm)
)
(node-3-1-3
   ((node-3-1 :begin))
   nil
   nil
   ((node-3-1 :end))
   (0 :inf 0 :inf)
   action
   (connect switch6 antenna_70cm ground_buffer)
)
(node-3-1-4
   ((node-3-1 :begin))
   nil
   nil
   ((node-7-1-2 :end) (node-3-1 :end))
   (0 :inf 0 :inf)
   action
   (set_to ground_buffer write)
)
(node-3-2
   ((node-3-1 :end))
   nil
   nil
   ((node-3-3 :begin))
   (0 :inf 0 :inf)
   action
   (turn_on telemetry)
)
(node-3-3
   ((node-7-2-1-4 :end) (node-3-2 :end))
   nil
   nil
   ((node-3-4 :begin))
   (0 :inf 0 :inf)
   action
   (fill_up ground_buffer telemetry)
)
(node-3-4
   ((node-3-3 :end))
   nil
   nil
   ((node-3 :end))
   (0 :inf 0 :inf)
   action
   (turn_off telemetry)
)
(node-4
   ((node-1 :end))
   ((node-4-1 :begin))
   ((node-4-2 :end))
   ((node-2 :begin))
   (0 :inf 0 :inf)
   action
   (capture ccd)
)
(node-4-1
   ((node-4 :begin))
   ((node-4-1-1 :begin) (node-4-1-2 :begin))
   ((node-4-1-5 :end))
   ((node-4-2 :begin))
   (0 :inf 0 :inf)
   action
   (load_dsr ccd)
)
(node-4-1-1
   ((node-4-1 :begin))
   nil
   ((node-5-1-4 :end))
   ((node-4-1-3 :begin))
   (0 :inf 0 :inf)
   action
   (connect switch3 line8 line10)
)
(node-4-1-2
   ((node-4-1 :begin))
   ((node-5-1-2 :end) (node-5-1-4 :end))
   ((node-5-2-3 :end))
   ((node-4-1-3 :begin))
   (0 :inf 0 :inf)
   action
   (set_to dsr write)
)
(node-4-1-3
   ((node-4-1-2 :end) (node-4-1-1 :end))
   nil
   nil
   ((node-4-1-4 :begin))
   (0 :inf 0 :inf)
   action
   (turn_on ccd)
)
(node-4-1-4
   ((node-4-1-3 :end))
   nil
   nil
   ((node-4-1-5 :begin))
   (0 :inf 0 :inf)
   action
   (fill_up dsr ccd)
)
(node-4-1-5
   ((node-4-1-4 :end))
   nil
   nil
   ((node-4-1 :end))
   (0 :inf 0 :inf)
   action
   (turn_off ccd)
)
(node-4-2
   ((node-4-1 :end))
   ((node-4-2-1 :begin) (node-4-2-2 :begin))
   ((node-4-2-4 :end))
   ((node-4 :end))
   (0 :inf 0 :inf)
   action
   (dump_dsr ccd)
)
(node-4-2-1
   ((node-4-2 :begin))
   ((node-4-2-1-1 :begin) (node-4-2-1-2 :begin) (node-4-2-1-3 :begin) (node-4-2-1-4 :begin))
   ((node-7-2-1-1 :end) (node-6-3-1-1 :end) (node-7-1-2 :end) (node-4-2-1-1 :end) (node-4-2-1-2 :end) (node-4-2-1-3 :end) (node-4-2-1-4 :end) (node-3-1-1 :end))
   ((node-4-2-3 :begin))
   (0 :inf 0 :inf)
   action
   (package_down antenna_70cm line12)
)
(node-4-2-1-1
   ((node-4-2-1 :begin))
   nil
   nil
   ((node-3-1 :end) (node-7-2-1 :end) (node-6-3-1 :end) (node-4-2-1 :end))
   (0 :inf 0 :inf)
   action
   (connect switch4 line12 line16)
)
(node-4-2-1-2
   ((node-4-2-1 :begin))
   nil
   nil
   ((node-4-2-1 :end))
   (0 :inf 0 :inf)
   action
   (connect switch5 line16 antenna_70cm)
)
(node-4-2-1-3
   ((node-4-2-1 :begin))
   nil
   nil
   ((node-4-2-1 :end))
   (0 :inf 0 :inf)
   action
   (connect switch6 antenna_70cm ground_buffer)
)
(node-4-2-1-4
   ((node-4-2-1 :begin))
   nil
   ((node-7-1-5 :begin))
   ((node-4-2-1 :end))
   (0 :inf 0 :inf)
   action
   (set_to ground_buffer write)
)
(node-4-2-2
   ((node-4-2 :begin))
   nil
   nil
   ((node-4-2-3 :begin))
   (0 :inf 0 :inf)
   action
   (set_to dsr read)
)
(node-4-2-3
   ((node-4-2-2 :end) (node-4-2-1 :end))
   nil
   nil
   ((node-4-2-4 :begin))
   (0 :inf 0 :inf)
   action
   (read_from dsr ccd)
)
(node-4-2-4
   ((node-4-2-3 :end))
   nil
   nil
   ((node-4-2 :end))
   (0 :inf 0 :inf)
   action
   (fill_up ground_buffer ccd)
)
(node-5
   ((node-1 :end))
   ((node-5-1 :begin))
   ((node-5-2 :end))
   ((node-2 :begin))
   (0 :inf 0 :inf)
   action
   (capture p_w)
)
(node-5-1
   ((node-5 :begin))
   ((node-5-1-1 :begin) (node-5-1-2 :begin))
   ((node-5-1-5 :end))
   ((node-5-2 :begin))
   (0 :inf 0 :inf)
   action
   (load_dsr p_w)
)
(node-5-1-1
   ((node-5-1 :begin))
   nil
   nil
   ((node-5-1-3 :begin))
   (0 :inf 0 :inf)
   action
   (connect switch3 line9 line10)
)
(node-5-1-2
   ((node-5-1 :begin))
   nil
   ((node-4-1-2 :begin))
   ((node-5-1-3 :begin))
   (0 :inf 0 :inf)
   action
   (set_to dsr write)
)
(node-5-1-3
   ((node-5-1-2 :end) (node-5-1-1 :end))
   nil
   nil
   ((node-5-1-4 :begin))
   (0 :inf 0 :inf)
   action
   (turn_on p_w)
)
(node-5-1-4
   ((node-5-1-3 :end))
   nil
   ((node-4-1-2 :begin))
   ((node-4-1-1 :end) (node-5-1-5 :begin))
   (0 :inf 0 :inf)
   action
   (fill_up dsr p_w)
)
(node-5-1-5
   ((node-5-1-4 :end))
   nil
   nil
   ((node-5-1 :end))
   (0 :inf 0 :inf)
   action
   (turn_off p_w)
)
(node-5-2
   ((node-5-1 :end))
   ((node-5-2-1 :begin) (node-5-2-2 :begin))
   ((node-5-2-4 :end))
   ((node-5 :end))
   (0 :inf 0 :inf)
   action
   (dump_dsr p_w)
)
(node-5-2-1
   ((node-5-2 :begin))
   ((node-5-2-1-1 :begin) (node-5-2-1-2 :begin) (node-5-2-1-3 :begin) (node-5-2-1-4 :begin))
   ((node-7-2-1-1 :end) (node-6-3-1-1 :end) (node-7-1-2 :end) (node-5-2-1-1 :end) (node-5-2-1-2 :end) (node-5-2-1-3 :end) (node-5-2-1-4 :end) (node-3-1-1 :end))
   ((node-5-2-3 :begin))
   (0 :inf 0 :inf)
   action
   (package_down antenna_70cm line12)
)
(node-5-2-1-1
   ((node-5-2-1 :begin))
   nil
   nil
   ((node-5-2-1 :end))
   (0 :inf 0 :inf)
   action
   (connect switch4 line12 line16)
)
(node-5-2-1-2
   ((node-5-2-1 :begin))
   nil
   nil
   ((node-5-2-1 :end))
   (0 :inf 0 :inf)
   action
   (connect switch5 line16 antenna_70cm)
)
(node-5-2-1-3
   ((node-5-2-1 :begin))
   nil
   nil
   ((node-5-2-1 :end))
   (0 :inf 0 :inf)
   action
   (connect switch6 antenna_70cm ground_buffer)
)
(node-5-2-1-4
   ((node-5-2-1 :begin))
   nil
   nil
   ((node-7-1-2 :end) (node-5-2-1 :end))
   (0 :inf 0 :inf)
   action
   (set_to ground_buffer write)
)
(node-5-2-2
   ((node-5-2 :begin))
   nil
   nil
   ((node-5-2-3 :begin))
   (0 :inf 0 :inf)
   action
   (set_to dsr read)
)
(node-5-2-3
   ((node-5-2-2 :end) (node-5-2-1 :end))
   nil
   nil
   ((node-4-1-2 :end) (node-5-2-4 :begin))
   (0 :inf 0 :inf)
   action
   (read_from dsr p_w)
)
(node-5-2-4
   ((node-7-2-1-4 :end) (node-5-2-3 :end))
   nil
   nil
   ((node-5-2 :end))
   (0 :inf 0 :inf)
   action
   (fill_up ground_buffer p_w)
)
(node-6
   ((node-1 :end))
   ((node-6-1 :begin) (node-6-2 :begin))
   ((node-6-3 :end))
   ((node-2 :begin))
   (0 :inf 0 :inf)
   action
   (capture space_dust)
)
(node-6-1
   ((node-6 :begin))
   nil
   nil
   ((node-6-3 :begin))
   (0 :inf 0 :inf)
   action
   (connect switch1 line3 line5)
)
(node-6-2
   ((node-6 :begin))
   nil
   nil
   ((node-6-3 :begin))
   (0 :inf 0 :inf)
   action
   (connect switch2 line5 line6)
)
(node-6-3
   ((node-6-2 :end) (node-6-1 :end))
   ((node-6-3-1 :begin))
   ((node-6-3-4 :end))
   ((node-6 :end))
   (0 :inf 0 :inf)
   action
   (data_dump antenna_70cm space_dust)
)
(node-6-3-1
   ((node-6-3 :begin))
   ((node-6-3-1-1 :begin) (node-6-3-1-2 :begin) (node-6-3-1-3 :begin) (node-6-3-1-4 :begin))
   ((node-7-2-1-1 :end) (node-4-2-1-1 :end) (node-7-1-2 :end) (node-6-3-1-1 :end) (node-6-3-1-2 :end) (node-6-3-1-3 :end) (node-6-3-1-4 :end) (node-3-1-1 :end))
   ((node-6-3-2 :begin))
   (0 :inf 0 :inf)
   action
   (package_down antenna_70cm line6)
)
(node-6-3-1-1
   ((node-6-3-1 :begin))
   nil
   nil
   ((node-3-1 :end) (node-4-2-1 :end) (node-5-2-1 :end) (node-7-2-1 :end) (node-6-3-1 :end))
   (0 :inf 0 :inf)
   action
   (connect switch4 line6 line16)
)
(node-6-3-1-2
   ((node-6-3-1 :begin))
   nil
   nil
   ((node-6-3-1 :end))
   (0 :inf 0 :inf)
   action
   (connect switch5 line16 antenna_70cm)
)
(node-6-3-1-3
   ((node-6-3-1 :begin))
   nil
   nil
   ((node-6-3-1 :end))
   (0 :inf 0 :inf)
   action
   (connect switch6 antenna_70cm ground_buffer)
)
(node-6-3-1-4
   ((node-6-3-1 :begin))
   nil
   nil
   ((node-7-1-2 :end) (node-6-3-1 :end))
   (0 :inf 0 :inf)
   action
   (set_to ground_buffer write)
)
(node-6-3-2
   ((node-6-3-1 :end))
   nil
   nil
   ((node-6-3-3 :begin))
   (0 :inf 0 :inf)
   action
   (turn_on space_dust)
)
(node-6-3-3
   ((node-7-2-1-4 :end) (node-6-3-2 :end))
   nil
   nil
   ((node-6-3-4 :begin))
   (0 :inf 0 :inf)
   action
   (fill_up ground_buffer space_dust)
)
(node-6-3-4
   ((node-6-3-3 :end))
   nil
   nil
   ((node-6-3 :end))
   (0 :inf 0 :inf)
   action
   (turn_off space_dust)
)
(node-7
   ((node-1 :end))
   ((node-7-1 :begin))
   ((node-7-2 :end))
   ((node-2 :begin))
   (0 :inf 0 :inf)
   action
   (dce_communicate)
)
(node-7-1
   ((node-7 :begin))
   ((node-7-1-1 :begin) (node-7-1-2 :begin))
   ((node-7-1-6 :end))
   ((node-7-2 :begin))
   (0 :inf 0 :inf)
   action
   (receive_message)
)
(node-7-1-1
   ((node-7-1 :begin))
   nil
   nil
   ((node-7-1-3 :begin))
   (0 :inf 0 :inf)
   action
   (set_to dce write)
)
(node-7-1-2
   ((node-7-1 :begin))
   nil
   ((node-6-3-1-4 :end) (node-5-2-1-4 :end) (node-3-1-4 :end))
   ((node-3-1 :end) (node-4-2-1 :end) (node-5-2-1 :end) (node-6-3-1 :end) (node-7-1-3 :begin))
   (0 :inf 0 :inf)
   action
   (set_to ground_buffer read)
)
(node-7-1-3
   ((node-7-1-2 :end) (node-7-1-1 :end))
   nil
   nil
   ((node-7-1-4 :begin))
   (0 :inf 0 :inf)
   action
   (turn_on transmitter)
)
(node-7-1-4
   ((node-7-1-3 :end))
   nil
   nil
   ((node-7-1-5 :begin))
   (0 :inf 0 :inf)
   action
   (read_from ground_buffer message)
)
(node-7-1-5
   ((node-7-1-4 :end))
   ((node-4-2-1-4 :end))
   nil
   ((node-7-1-6 :begin))
   (0 :inf 0 :inf)
   action
   (fill_up dce message)
)
(node-7-1-6
   ((node-7-1-5 :end))
   nil
   nil
   ((node-7-1 :end))
   (0 :inf 0 :inf)
   action
   (turn_off transmitter)
)
(node-7-2
   ((node-7-1 :end))
   ((node-7-2-1 :begin) (node-7-2-2 :begin))
   ((node-7-2-4 :end))
   ((node-7 :end))
   (0 :inf 0 :inf)
   action
   (transmit_message)
)
(node-7-2-1
   ((node-7-2 :begin))
   ((node-7-2-1-1 :begin) (node-7-2-1-2 :begin) (node-7-2-1-3 :begin) (node-7-2-1-4 :begin))
   ((node-6-3-1-1 :end) (node-4-2-1-1 :end) (node-7-2-1-1 :end) (node-7-2-1-2 :end) (node-7-2-1-3 :end) (node-7-2-1-4 :end) (node-3-1-1 :end))
   ((node-7-2-3 :begin))
   (0 :inf 0 :inf)
   action
   (package_down antenna_70cm line15)
)
(node-7-2-1-1
   ((node-7-2-1 :begin))
   nil
   nil
   ((node-3-1 :end) (node-4-2-1 :end) (node-5-2-1 :end) (node-6-3-1 :end) (node-7-2-1 :end))
   (0 :inf 0 :inf)
   action
   (connect switch4 line15 line16)
)
(node-7-2-1-2
   ((node-7-2-1 :begin))
   nil
   nil
   ((node-7-2-1 :end))
   (0 :inf 0 :inf)
   action
   (connect switch5 line16 antenna_70cm)
)
(node-7-2-1-3
   ((node-7-2-1 :begin))
   nil
   nil
   ((node-7-2-1 :end))
   (0 :inf 0 :inf)
   action
   (connect switch6 antenna_70cm ground_buffer)
)
(node-7-2-1-4
   ((node-7-2-1 :begin))
   nil
   nil
   ((node-6-3-3 :begin) (node-5-2-4 :begin) (node-3-3 :begin) (node-7-2-1 :end))
   (0 :inf 0 :inf)
   action
   (set_to ground_buffer write)
)
(node-7-2-2
   ((node-7-2 :begin))
   nil
   nil
   ((node-7-2-3 :begin))
   (0 :inf 0 :inf)
   action
   (set_to dce read)
)
(node-7-2-3
   ((node-7-2-2 :end) (node-7-2-1 :end))
   nil
   nil
   ((node-7-2-4 :begin))
   (0 :inf 0 :inf)
   action
   (read_from dce message)
)
(node-7-2-4
   ((node-7-2-3 :end))
   nil
   nil
   ((node-7-2 :end))
   (0 :inf 0 :inf)
   action
   (fill_up ground_buffer message)
)
)

;;; TOME:
(
((tome (contents dce) (node-1 :end)) empty)
((tome (contents dce) (node-7-1-5 :end)) message)
((tome (contents dce) (node-7-2-3 :end)) empty)
((tome (contents dsr) (node-1 :end)) empty)
((tome (contents dsr) (node-4-1-4 :end)) ccd)
((tome (contents dsr) (node-4-2-3 :end)) empty)
((tome (contents dsr) (node-5-1-4 :end)) p_w)
((tome (contents dsr) (node-5-2-3 :end)) empty)
((tome (contents ground_buffer) (node-1 :end)) empty)
((tome (contents ground_buffer) (node-3-3 :end)) telemetry)
((tome (contents ground_buffer) (node-4-2-4 :end)) ccd)
((tome (contents ground_buffer) (node-5-2-4 :end)) p_w)
((tome (contents ground_buffer) (node-6-3-3 :end)) space_dust)
((tome (contents ground_buffer) (node-7-1-4 :end)) empty)
((tome (contents ground_buffer) (node-7-2-4 :end)) message)
((tome (input switch1) (node-1 :end)) line0)
((tome (input switch1) (node-6-1 :end)) line3)
((tome (input switch2) (node-1 :end)) line5)
((tome (input switch2) (node-6-2 :end)) line5)
((tome (input switch3) (node-1 :end)) line7)
((tome (input switch3) (node-4-1-1 :end)) line8)
((tome (input switch3) (node-5-1-1 :end)) line9)
((tome (input switch4) (node-1 :end)) line13)
((tome (input switch4) (node-3-1-1 :end)) line13)
((tome (input switch4) (node-4-2-1-1 :end)) line12)
((tome (input switch4) (node-5-2-1-1 :end)) line12)
((tome (input switch4) (node-6-3-1-1 :end)) line6)
((tome (input switch4) (node-7-2-1-1 :end)) line15)
((tome (input switch5) (node-1 :end)) line16)
((tome (input switch5) (node-3-1-2 :end)) line16)
((tome (input switch5) (node-4-2-1-2 :end)) line16)
((tome (input switch5) (node-5-2-1-2 :end)) line16)
((tome (input switch5) (node-6-3-1-2 :end)) line16)
((tome (input switch5) (node-7-2-1-2 :end)) line16)
((tome (input switch6) (node-1 :end)) antenna_70cm)
((tome (input switch6) (node-3-1-3 :end)) antenna_70cm)
((tome (input switch6) (node-4-2-1-3 :end)) antenna_70cm)
((tome (input switch6) (node-5-2-1-3 :end)) antenna_70cm)
((tome (input switch6) (node-6-3-1-3 :end)) antenna_70cm)
((tome (input switch6) (node-7-2-1-3 :end)) antenna_70cm)
((tome (mode dce) (node-1 :end)) read)
((tome (mode dce) (node-7-1-1 :end)) write)
((tome (mode dce) (node-7-2-2 :end)) read)
((tome (mode dsr) (node-1 :end)) read)
((tome (mode dsr) (node-4-1-2 :end)) write)
((tome (mode dsr) (node-4-2-2 :end)) read)
((tome (mode dsr) (node-5-1-2 :end)) write)
((tome (mode dsr) (node-5-2-2 :end)) read)
((tome (mode ground_buffer) (node-1 :end)) read)
((tome (mode ground_buffer) (node-3-1-4 :end)) write)
((tome (mode ground_buffer) (node-4-2-1-4 :end)) write)
((tome (mode ground_buffer) (node-5-2-1-4 :end)) write)
((tome (mode ground_buffer) (node-6-3-1-4 :end)) write)
((tome (mode ground_buffer) (node-7-1-2 :end)) read)
((tome (mode ground_buffer) (node-7-2-1-4 :end)) write)
((tome (output switch1) (node-1 :end)) line5)
((tome (output switch1) (node-6-1 :end)) line5)
((tome (output switch2) (node-1 :end)) line7)
((tome (output switch2) (node-6-2 :end)) line6)
((tome (output switch3) (node-1 :end)) line10)
((tome (output switch3) (node-4-1-1 :end)) line10)
((tome (output switch3) (node-5-1-1 :end)) line10)
((tome (output switch4) (node-1 :end)) line16)
((tome (output switch4) (node-3-1-1 :end)) line16)
((tome (output switch4) (node-4-2-1-1 :end)) line16)
((tome (output switch4) (node-5-2-1-1 :end)) line16)
((tome (output switch4) (node-6-3-1-1 :end)) line16)
((tome (output switch4) (node-7-2-1-1 :end)) line16)
((tome (output switch5) (node-1 :end)) antenna_70cm)
((tome (output switch5) (node-3-1-2 :end)) antenna_70cm)
((tome (output switch5) (node-4-2-1-2 :end)) antenna_70cm)
((tome (output switch5) (node-5-2-1-2 :end)) antenna_70cm)
((tome (output switch5) (node-6-3-1-2 :end)) antenna_70cm)
((tome (output switch5) (node-7-2-1-2 :end)) antenna_70cm)
((tome (output switch6) (node-1 :end)) ground_buffer)
((tome (output switch6) (node-3-1-3 :end)) ground_buffer)
((tome (output switch6) (node-4-2-1-3 :end)) ground_buffer)
((tome (output switch6) (node-5-2-1-3 :end)) ground_buffer)
((tome (output switch6) (node-6-3-1-3 :end)) ground_buffer)
((tome (output switch6) (node-7-2-1-3 :end)) ground_buffer)
((tome (status ccd) (node-1 :end)) off)
((tome (status ccd) (node-4-1-3 :end)) on)
((tome (status ccd) (node-4-1-5 :end)) off)
((tome (status digitalker) (node-1 :end)) off)
((tome (status horizon_sensor) (node-1 :end)) off)
((tome (status nav_mag) (node-1 :end)) off)
((tome (status p_w) (node-1 :end)) off)
((tome (status p_w) (node-5-1-3 :end)) on)
((tome (status p_w) (node-5-1-5 :end)) off)
((tome (status space_dust) (node-1 :end)) off)
((tome (status space_dust) (node-6-3-2 :end)) on)
((tome (status space_dust) (node-6-3-4 :end)) off)
((tome (status sun_sensor) (node-1 :end)) off)
((tome (status telemetry) (node-1 :end)) off)
((tome (status telemetry) (node-3-2 :end)) on)
((tome (status telemetry) (node-3-4 :end)) off)
((tome (status transmitter) (node-1 :end)) off)
((tome (status transmitter) (node-7-1-3 :end)) on)
((tome (status transmitter) (node-7-1-6 :end)) off)
((tome (switch_input_can_be switch1 line0) :always) true)
((tome (switch_input_can_be switch1 line1) :always) true)
((tome (switch_input_can_be switch1 line2) :always) true)
((tome (switch_input_can_be switch1 line3) :always) true)
((tome (switch_input_can_be switch1 line4) :always) true)
((tome (switch_input_can_be switch2 line5) :always) true)
((tome (switch_input_can_be switch3 line7) :always) true)
((tome (switch_input_can_be switch3 line8) :always) true)
((tome (switch_input_can_be switch3 line9) :always) true)
((tome (switch_input_can_be switch4 line12) :always) true)
((tome (switch_input_can_be switch4 line13) :always) true)
((tome (switch_input_can_be switch4 line15) :always) true)
((tome (switch_input_can_be switch4 line6) :always) true)
((tome (switch_input_can_be switch5 line16) :always) true)
((tome (switch_input_can_be switch6 antenna_2m) :always) true)
((tome (switch_input_can_be switch6 antenna_70cm) :always) true)
((tome (switch_output_can_be switch1 line5) :always) true)
((tome (switch_output_can_be switch2 line6) :always) true)
((tome (switch_output_can_be switch2 line7) :always) true)
((tome (switch_output_can_be switch3 line10) :always) true)
((tome (switch_output_can_be switch4 line16) :always) true)
((tome (switch_output_can_be switch5 antenna_2m) :always) true)
((tome (switch_output_can_be switch5 antenna_70cm) :always) true)
((tome (switch_output_can_be switch6 ground_buffer) :always) true)
)

;;; GOST:
(
((gost only_use_for_query (switch_input_can_be switch1 line3) true (node-6-1 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_for_query (switch_input_can_be switch2 line5) true (node-6-2 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_for_query (switch_input_can_be switch3 line8) true (node-4-1-1 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_for_query (switch_input_can_be switch3 line9) true (node-5-1-1 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_for_query (switch_input_can_be switch4 line12) true (node-4-2-1-1 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_for_query (switch_input_can_be switch4 line12) true (node-5-2-1-1 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_for_query (switch_input_can_be switch4 line13) true (node-3-1-1 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_for_query (switch_input_can_be switch4 line15) true (node-7-2-1-1 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_for_query (switch_input_can_be switch4 line6) true (node-6-3-1-1 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_for_query (switch_input_can_be switch5 line16) true (node-3-1-2 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_for_query (switch_input_can_be switch5 line16) true (node-4-2-1-2 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_for_query (switch_input_can_be switch5 line16) true (node-5-2-1-2 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_for_query (switch_input_can_be switch5 line16) true (node-6-3-1-2 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_for_query (switch_input_can_be switch5 line16) true (node-7-2-1-2 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_for_query (switch_input_can_be switch6 antenna_70cm) true (node-3-1-3 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_for_query (switch_input_can_be switch6 antenna_70cm) true (node-4-2-1-3 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_for_query (switch_input_can_be switch6 antenna_70cm) true (node-5-2-1-3 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_for_query (switch_input_can_be switch6 antenna_70cm) true (node-6-3-1-3 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_for_query (switch_input_can_be switch6 antenna_70cm) true (node-7-2-1-3 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_for_query (switch_output_can_be switch1 line5) true (node-6-1 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_for_query (switch_output_can_be switch2 line6) true (node-6-2 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_for_query (switch_output_can_be switch3 line10) true (node-4-1-1 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_for_query (switch_output_can_be switch3 line10) true (node-5-1-1 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_for_query (switch_output_can_be switch4 line16) true (node-3-1-1 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_for_query (switch_output_can_be switch4 line16) true (node-4-2-1-1 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_for_query (switch_output_can_be switch4 line16) true (node-5-2-1-1 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_for_query (switch_output_can_be switch4 line16) true (node-6-3-1-1 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_for_query (switch_output_can_be switch4 line16) true (node-7-2-1-1 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_for_query (switch_output_can_be switch5 antenna_70cm) true (node-3-1-2 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_for_query (switch_output_can_be switch5 antenna_70cm) true (node-4-2-1-2 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_for_query (switch_output_can_be switch5 antenna_70cm) true (node-5-2-1-2 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_for_query (switch_output_can_be switch5 antenna_70cm) true (node-6-3-1-2 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_for_query (switch_output_can_be switch5 antenna_70cm) true (node-7-2-1-2 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_for_query (switch_output_can_be switch6 ground_buffer) true (node-3-1-3 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_for_query (switch_output_can_be switch6 ground_buffer) true (node-4-2-1-3 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_for_query (switch_output_can_be switch6 ground_buffer) true (node-5-2-1-3 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_for_query (switch_output_can_be switch6 ground_buffer) true (node-6-3-1-3 :begin))
   ((:always . :already-satisfied))
)
((gost only_use_for_query (switch_output_can_be switch6 ground_buffer) true (node-7-2-1-3 :begin))
   ((:always . :already-satisfied))
)
((gost supervised (contents dce) message (node-7-2 :begin))
   (((node-7-1 :end) . :none))
)
((gost supervised (contents dsr) ccd (node-4-2 :begin))
   (((node-4-1 :end) . :none))
)
((gost supervised (contents dsr) p_w (node-5-2 :begin))
   (((node-5-1 :end) . :none))
)
((gost supervised (input switch1) line3 (node-6-3 :begin))
   (((node-6-1 :end) . :none))
)
((gost supervised (input switch2) line5 (node-6-3 :begin))
   (((node-6-2 :end) . :none))
)
((gost supervised (input switch3) line8 (node-4-1-4 :end))
   (((node-4-1-1 :end) . :none))
)
((gost supervised (input switch3) line9 (node-5-1-4 :end))
   (((node-5-1-1 :end) . :none))
)
((gost supervised (input switch4) line12 (node-4-2-4 :begin))
   (((node-4-2-1 :end) . :none))
)
((gost supervised (input switch4) line12 (node-5-2-4 :begin))
   (((node-5-2-1 :end) . :none))
)
((gost supervised (input switch4) line13 (node-3-4 :begin))
   (((node-3-1 :end) . :none))
)
((gost supervised (input switch4) line15 (node-7-2-4 :begin))
   (((node-7-2-1 :end) . :none))
)
((gost supervised (input switch4) line6 (node-6-3-4 :begin))
   (((node-6-3-1 :end) . :none))
)
((gost supervised (input switch5) line16 (node-3-4 :begin))
   (((node-3-1 :end) . :none))
)
((gost supervised (input switch5) line16 (node-4-2-4 :begin))
   (((node-4-2-1 :end) . :none))
)
((gost supervised (input switch5) line16 (node-5-2-4 :begin))
   (((node-5-2-1 :end) . :none))
)
((gost supervised (input switch5) line16 (node-6-3-4 :begin))
   (((node-6-3-1 :end) . :none))
)
((gost supervised (input switch5) line16 (node-7-2-4 :begin))
   (((node-7-2-1 :end) . :none))
)
((gost supervised (input switch6) antenna_70cm (node-3-4 :begin))
   (((node-3-1 :end) . :none))
)
((gost supervised (input switch6) antenna_70cm (node-4-2-4 :begin))
   (((node-4-2-1 :end) . :none))
)
((gost supervised (input switch6) antenna_70cm (node-5-2-4 :begin))
   (((node-5-2-1 :end) . :none))
)
((gost supervised (input switch6) antenna_70cm (node-6-3-4 :begin))
   (((node-6-3-1 :end) . :none))
)
((gost supervised (input switch6) antenna_70cm (node-7-2-4 :begin))
   (((node-7-2-1 :end) . :none))
)
((gost supervised (mode dce) read (node-7-2-4 :begin))
   (((node-7-2-2 :end) . :none))
)
((gost supervised (mode dce) write (node-7-1-5 :begin))
   (((node-7-1-1 :end) . :none))
)
((gost supervised (mode dsr) read (node-4-2-3 :end))
   (((node-4-2-2 :end) . :none))
)
((gost supervised (mode dsr) read (node-5-2-3 :end))
   (((node-5-2-2 :end) . :none))
)
((gost supervised (mode dsr) write (node-4-1-4 :end))
   (((node-4-1-2 :end) . :none))
)
((gost supervised (mode dsr) write (node-5-1-4 :end))
   (((node-5-1-2 :end) . :none))
)
((gost supervised (mode ground_buffer) read (node-7-1-5 :begin))
   (((node-7-1-2 :end) . :none))
)
((gost supervised (mode ground_buffer) write (node-3-4 :begin))
   (((node-3-1 :end) . :none))
)
((gost supervised (mode ground_buffer) write (node-4-2-4 :begin))
   (((node-4-2-1 :end) . :none))
)
((gost supervised (mode ground_buffer) write (node-5-2-4 :begin))
   (((node-5-2-1 :end) . :none))
)
((gost supervised (mode ground_buffer) write (node-6-3-4 :begin))
   (((node-6-3-1 :end) . :none))
)
((gost supervised (mode ground_buffer) write (node-7-2-4 :begin))
   (((node-7-2-1 :end) . :none))
)
((gost supervised (output switch1) line5 (node-6-3 :begin))
   (((node-6-1 :end) . :none))
)
((gost supervised (output switch2) line6 (node-6-3 :begin))
   (((node-6-2 :end) . :none))
)
((gost supervised (output switch3) line10 (node-4-1-4 :end))
   (((node-4-1-1 :end) . :none))
)
((gost supervised (output switch3) line10 (node-5-1-4 :end))
   (((node-5-1-1 :end) . :none))
)
((gost supervised (output switch4) line16 (node-3-4 :begin))
   (((node-3-1 :end) . :none))
)
((gost supervised (output switch4) line16 (node-4-2-4 :begin))
   (((node-4-2-1 :end) . :none))
)
((gost supervised (output switch4) line16 (node-5-2-4 :begin))
   (((node-5-2-1 :end) . :none))
)
((gost supervised (output switch4) line16 (node-6-3-4 :begin))
   (((node-6-3-1 :end) . :none))
)
((gost supervised (output switch4) line16 (node-7-2-4 :begin))
   (((node-7-2-1 :end) . :none))
)
((gost supervised (output switch5) antenna_70cm (node-3-4 :begin))
   (((node-3-1 :end) . :none))
)
((gost supervised (output switch5) antenna_70cm (node-4-2-4 :begin))
   (((node-4-2-1 :end) . :none))
)
((gost supervised (output switch5) antenna_70cm (node-5-2-4 :begin))
   (((node-5-2-1 :end) . :none))
)
((gost supervised (output switch5) antenna_70cm (node-6-3-4 :begin))
   (((node-6-3-1 :end) . :none))
)
((gost supervised (output switch5) antenna_70cm (node-7-2-4 :begin))
   (((node-7-2-1 :end) . :none))
)
((gost supervised (output switch6) ground_buffer (node-3-4 :begin))
   (((node-3-1 :end) . :none))
)
((gost supervised (output switch6) ground_buffer (node-4-2-4 :begin))
   (((node-4-2-1 :end) . :none))
)
((gost supervised (output switch6) ground_buffer (node-5-2-4 :begin))
   (((node-5-2-1 :end) . :none))
)
((gost supervised (output switch6) ground_buffer (node-6-3-4 :begin))
   (((node-6-3-1 :end) . :none))
)
((gost supervised (output switch6) ground_buffer (node-7-2-4 :begin))
   (((node-7-2-1 :end) . :none))
)
((gost supervised (status ccd) on (node-4-1-4 :end))
   (((node-4-1-3 :end) . :none))
)
((gost supervised (status p_w) on (node-5-1-4 :end))
   (((node-5-1-3 :end) . :none))
)
((gost supervised (status space_dust) on (node-6-3-4 :begin))
   (((node-6-3-2 :end) . :none))
)
((gost supervised (status telemetry) on (node-3-4 :begin))
   (((node-3-2 :end) . :none))
)
((gost supervised (status transmitter) on (node-7-1-5 :begin))
   (((node-7-1-3 :end) . :none))
)
((gost unsupervised (contents dce) empty (node-7-1-1 :begin))
   (((node-1 :end) . :already-satisfied))
)
((gost unsupervised (contents dce) empty (node-7-1-5 :begin))
   (((node-1 :end) . :already-satisfied))
)
((gost unsupervised (contents dsr) empty (node-4-1-2 :begin))
   (((node-1 :end) . :link-no-bindings))
)
((gost unsupervised (contents dsr) empty (node-4-1-4 :begin))
   (((node-5-2-3 :end) . :already-satisfied))
)
((gost unsupervised (contents dsr) empty (node-5-1-2 :begin))
   (((node-1 :end) . :already-satisfied))
)
((gost unsupervised (contents dsr) empty (node-5-1-4 :begin))
   (((node-1 :end) . :already-satisfied))
)
((gost unsupervised (mode dce) read (node-7-1-1 :begin))
   (((node-1 :end) . :already-satisfied))
)
((gost unsupervised (mode dce) read (node-7-2-3 :begin))
   (((node-7-2-2 :end) . :already-satisfied))
)
((gost unsupervised (mode dce) write (node-7-1-5 :begin))
   (((node-7-1-1 :end) . :already-satisfied))
)
((gost unsupervised (mode dce) write (node-7-2-2 :begin))
   (((node-7-1-1 :end) . :already-satisfied))
)
((gost unsupervised (mode dsr) read (node-4-1-2 :begin))
   (((node-1 :end) . :link-no-bindings))
)
((gost unsupervised (mode dsr) read (node-4-2-3 :begin))
   (((node-4-2-2 :end) . :already-satisfied))
)
((gost unsupervised (mode dsr) read (node-5-1-2 :begin))
   (((node-1 :end) . :already-satisfied))
)
((gost unsupervised (mode dsr) read (node-5-2-3 :begin))
   (((node-5-2-2 :end) . :already-satisfied))
)
((gost unsupervised (mode dsr) write (node-4-1-4 :begin))
   (((node-4-1-2 :end) . :already-satisfied))
)
((gost unsupervised (mode dsr) write (node-4-2-2 :begin))
   (((node-4-1-2 :end) . :already-satisfied))
)
((gost unsupervised (mode dsr) write (node-5-1-4 :begin))
   (((node-5-1-2 :end) . :already-satisfied))
)
((gost unsupervised (mode dsr) write (node-5-2-2 :begin))
   (((node-5-1-2 :end) . :already-satisfied))
)
((gost unsupervised (mode ground_buffer) read (node-7-1-4 :begin))
   (((node-7-1-2 :end) . :already-satisfied))
)
((gost unsupervised (mode ground_buffer) write (node-3-3 :begin))
   (((node-7-2-1-4 :end) . :link-no-bindings))
)
((gost unsupervised (mode ground_buffer) write (node-4-2-4 :begin))
   (((node-4-2-1-4 :end) . :already-satisfied))
)
((gost unsupervised (mode ground_buffer) write (node-5-2-4 :begin))
   (((node-7-2-1-4 :end) . :link-no-bindings))
)
((gost unsupervised (mode ground_buffer) write (node-6-3-3 :begin))
   (((node-7-2-1-4 :end) . :link-no-bindings))
)
((gost unsupervised (mode ground_buffer) write (node-7-2-4 :begin))
   (((node-7-2-1-4 :end) . :already-satisfied))
)
((gost unsupervised (status ccd) off (node-4-1-3 :begin))
   (((node-1 :end) . :already-satisfied))
)
((gost unsupervised (status ccd) on (node-4-1-5 :begin))
   (((node-4-1-3 :end) . :already-satisfied))
)
((gost unsupervised (status p_w) off (node-5-1-3 :begin))
   (((node-1 :end) . :already-satisfied))
)
((gost unsupervised (status p_w) on (node-5-1-5 :begin))
   (((node-5-1-3 :end) . :already-satisfied))
)
((gost unsupervised (status space_dust) off (node-6-3-2 :begin))
   (((node-1 :end) . :already-satisfied))
)
((gost unsupervised (status space_dust) on (node-6-3-4 :begin))
   (((node-6-3-2 :end) . :already-satisfied))
)
((gost unsupervised (status telemetry) off (node-3-2 :begin))
   (((node-1 :end) . :already-satisfied))
)
((gost unsupervised (status telemetry) on (node-3-4 :begin))
   (((node-3-2 :end) . :already-satisfied))
)
((gost unsupervised (status transmitter) off (node-7-1-3 :begin))
   (((node-1 :end) . :already-satisfied))
)
((gost unsupervised (status transmitter) on (node-7-1-6 :begin))
   (((node-7-1-3 :end) . :already-satisfied))
)
)

;;; PSV descriptions:
(
)

;;; PSV equivalence classes:
(
)

;;; Resource usage table:
(
)

;;; World at end of node-1:
(
((switch_input_can_be switch1 line0) true)
((switch_input_can_be switch1 line1) true)
((switch_input_can_be switch1 line2) true)
((switch_input_can_be switch1 line3) true)
((switch_input_can_be switch1 line4) true)
((switch_input_can_be switch2 line5) true)
((switch_input_can_be switch3 line7) true)
((switch_input_can_be switch3 line8) true)
((switch_input_can_be switch3 line9) true)
((switch_input_can_be switch4 line12) true)
((switch_input_can_be switch4 line13) true)
((switch_input_can_be switch4 line15) true)
((switch_input_can_be switch4 line6) true)
((switch_input_can_be switch5 line16) true)
((switch_input_can_be switch6 antenna_2m) true)
((switch_input_can_be switch6 antenna_70cm) true)
((switch_output_can_be switch1 line5) true)
((switch_output_can_be switch2 line6) true)
((switch_output_can_be switch2 line7) true)
((switch_output_can_be switch3 line10) true)
((switch_output_can_be switch4 line16) true)
((switch_output_can_be switch5 antenna_2m) true)
((switch_output_can_be switch5 antenna_70cm) true)
((switch_output_can_be switch6 ground_buffer) true)
)

;;; World at end of node-2:
(
((contents dce) empty)
((contents dsr) empty)
((input switch1) line3)
((input switch2) line5)
((input switch3) line8)
((input switch4) line12)
((input switch5) line16)
((input switch6) antenna_70cm)
((mode dce) read)
((mode dsr) read)
((mode ground_buffer) write)
((output switch1) line5)
((output switch2) line6)
((output switch3) line10)
((output switch4) line16)
((output switch5) antenna_70cm)
((output switch6) ground_buffer)
((status ccd) off)
((status digitalker) off)
((status horizon_sensor) off)
((status nav_mag) off)
((status p_w) off)
((status space_dust) off)
((status sun_sensor) off)
((status telemetry) off)
((status transmitter) off)
((switch_input_can_be switch1 line0) true)
((switch_input_can_be switch1 line1) true)
((switch_input_can_be switch1 line2) true)
((switch_input_can_be switch1 line3) true)
((switch_input_can_be switch1 line4) true)
((switch_input_can_be switch2 line5) true)
((switch_input_can_be switch3 line7) true)
((switch_input_can_be switch3 line8) true)
((switch_input_can_be switch3 line9) true)
((switch_input_can_be switch4 line12) true)
((switch_input_can_be switch4 line13) true)
((switch_input_can_be switch4 line15) true)
((switch_input_can_be switch4 line6) true)
((switch_input_can_be switch5 line16) true)
((switch_input_can_be switch6 antenna_2m) true)
((switch_input_can_be switch6 antenna_70cm) true)
((switch_output_can_be switch1 line5) true)
((switch_output_can_be switch2 line6) true)
((switch_output_can_be switch2 line7) true)
((switch_output_can_be switch3 line10) true)
((switch_output_can_be switch4 line16) true)
((switch_output_can_be switch5 antenna_2m) true)
((switch_output_can_be switch5 antenna_70cm) true)
((switch_output_can_be switch6 ground_buffer) true)
)
